{"version":3,"sources":["reducers/game/index.js","reducers/index.js","store.js","actions/onGameAction.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["solvedPositions","initialState","currPositions","JSON","parse","localStorage","getItem","allPositions","win","forbidMove","nextMove","allMoves","disabled","movesCount","parseInt","level","time","history","reducers","game","state","arguments","length","undefined","action","possibleMoves","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","slice","emptyIndex","indexOf","stringify","saveMoves","tile","currPositionsIndex","push","setItem","movePossible","targetIndex","swapTiles","clearCache","removeItem","type","payload","Object","objectSpread","curr_x","Math","floor","curr_y","next_x","next_y","concat","saveHistory","possibleMovesArr","forbidMoveIndex","forbidMoveIndexLoc","splice","nextMoveIndex","random","disable","currTime","h_index","m_index","s_index","totalTime","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","thunk","onGameAction","params","dispatch","shuffleWithLevel","i","solveArr","reverse","step","solutionTimer","setInterval","clearInterval","grid","map","n","Button","_ref","handleClick","react_default","a","createElement","className","onClick","LevelItem","_ref2","style","id","actions","connect","props","timerStart","timerStop","timerReset","changeLevel","e","target","useEffect","document","getElementById","innerHTML","setTimeout","click","key","Timer","initialTime","lastUnit","_ref3","start","resume","stop","pause","reset","Fragment","Hours","Minutes","Seconds","display","cellClass","_grid$currPositions$i","slicedToArray","x","y","transform","line","borderColor","App","es","src_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.985cd399.chunk.js","sourcesContent":["let solvedPositions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0];\nexport const initialState = {\n  currPositions: JSON.parse(localStorage.getItem(\"currentGamePosition\")) || solvedPositions,\n  allPositions: JSON.parse(localStorage.getItem(\"allGamePositions\")) || [solvedPositions],\n  win: false,\n  forbidMove: -1,\n  nextMove: null,\n  allMoves: JSON.parse(localStorage.getItem(\"allMoves\")) || [0],\n  disabled: false,\n  movesCount: parseInt(localStorage.getItem(\"movesCount\")) || 0,\n  level: parseInt(localStorage.getItem(\"level\")) || 0,\n  time: parseInt(localStorage.getItem(\"time\")) || 0,\n  history: JSON.parse(localStorage.getItem(\"history\")) || []\n};\nexport default function (state = initialState, action) {\n  /* Helper Variables */\n  let possibleMoves = {\n    0: [1, 4],\n    1: [0, 2, 5],\n    2: [1, 3, 6],\n    3: [2, 7],\n    4: [0, 5, 8],\n    5: [1, 4, 6, 9],\n    6: [2, 5, 7, 10],\n    7: [3, 6, 11],\n    8: [4, 9, 12],\n    9: [5, 8, 10, 13],\n    10: [6, 9, 11, 14],\n    11: [7, 10, 15],\n    12: [8, 13],\n    13: [9, 12, 14],\n    14: [10, 13, 15],\n    15: [11, 14]\n  }\n  /* State Variables */\n  let currPositions = state.currPositions.slice();\n  let emptyIndex = currPositions.indexOf(0);\n  let allMoves = state.allMoves.slice();\n  let allPositions = state.allPositions.slice();\n  let history = state.history.slice();\n  let movesCount = state.movesCount;\n  /* Helper Functions */\n  let win = () => {\n    return JSON.stringify(solvedPositions) === JSON.stringify(currPositions)\n  };\n\n\n  let saveMoves = (tile) => {\n    let currPositionsIndex = (JSON.stringify(allPositions).indexOf(JSON.stringify(currPositions)) - 1) / 40;\n    if (currPositionsIndex < 0) {\n      allPositions.push(currPositions)\n      allMoves.push(tile)\n    }\n    else {\n      allPositions = allPositions.slice(0, currPositionsIndex + 1)\n      allMoves = allMoves.slice(0, currPositionsIndex + 1)\n    }\n    localStorage.setItem(\"allMoves\", JSON.stringify(allMoves))\n    localStorage.setItem(\"allGamePositions\", JSON.stringify(allPositions))\n    localStorage.setItem(\"currentGamePosition\", JSON.stringify(currPositions))\n    localStorage.setItem(\"movesCount\", movesCount)\n  }\n\n  let saveTime = (time) => {\n    localStorage.setItem(\"time\", time)\n  }\n\n  let movePossible = (targetIndex) => {\n    return (possibleMoves[emptyIndex].indexOf(targetIndex) > -1)\n  }\n\n  let swapTiles = (tile, targetIndex) => {\n    currPositions[emptyIndex] = tile;\n    currPositions[targetIndex] = 0;\n  }\n\n  let clearCache = () => {\n    localStorage.removeItem(\"currentGamePosition\")\n    localStorage.removeItem(\"allMoves\")\n    localStorage.removeItem(\"allGamePositions\")\n    localStorage.removeItem(\"time\")\n    localStorage.removeItem(\"movesCount\")\n    localStorage.removeItem(\"history\")\n  }\n\n  let saveHistory = (tile, targetIndex) => {\n    let curr_x = Math.floor(targetIndex / 4);\n    let curr_y = targetIndex % 4;\n    let next_x = Math.floor(emptyIndex / 4);\n    let next_y = emptyIndex % 4;\n    history.push(`Moved ${tile} from ${curr_x}, ${curr_y} to ${next_x}, ${next_y}`)\n    localStorage.setItem(\"history\", JSON.stringify(history))\n  }\n\n  switch (action.type) {\n    case \"SOLVE_ONE_STEP\": {\n      let tile = action.payload.tile;\n      let targetIndex = currPositions.indexOf(tile);\n      if (movePossible(targetIndex)) {\n        swapTiles(tile, targetIndex)\n        win = win()\n        return { ...state, currPositions: currPositions, win: win }\n      }\n      return state;\n    }\n    case \"SHUFFLE_ONE_STEP\": {\n      let tile = state.nextMove;\n      let targetIndex = currPositions.indexOf(tile);\n      if (movePossible(targetIndex)) {\n        swapTiles(tile, targetIndex)\n        saveMoves(tile)\n        win = win()\n        return { ...state, currPositions: currPositions, win: win, allMoves: allMoves, nextMove: null, allPositions: allPositions }\n      }\n      return state;\n    }\n    case \"MOVE_ONE_STEP\": {\n      let tile = action.payload.tile;\n      let targetIndex = currPositions.indexOf(tile);\n      if (movePossible(targetIndex)) {\n        swapTiles(tile, targetIndex)\n        movesCount += 1\n        saveMoves(tile)\n        saveHistory(tile, targetIndex)\n        win = win()\n        return { ...state, currPositions: currPositions, win: win, allMoves: allMoves, nextMove: null, allPositions: allPositions, movesCount: movesCount, history: history }\n      }\n      return state;\n    }\n    case \"SELECT_RANDOM\": {\n      let possibleMovesArr = possibleMoves[emptyIndex]\n      var forbidMoveIndex = currPositions.indexOf(state.forbidMove)\n      var forbidMoveIndexLoc = possibleMovesArr.indexOf(forbidMoveIndex)\n      if (forbidMoveIndexLoc > -1) {\n        possibleMovesArr.splice(forbidMoveIndexLoc, 1)\n      }\n      var nextMoveIndex = Math.floor((Math.random() * possibleMovesArr.length));\n      var nextMove = state.currPositions[possibleMovesArr[nextMoveIndex]]\n      return { ...state, forbidMove: nextMove, nextMove: nextMove }\n\n    }\n    case \"RESET\": {\n      clearCache()\n      return {\n        ...state,\n        currPositions: solvedPositions,\n        win: false,\n        forbidMove: -1,\n        nextMove: null,\n        allMoves: [0],\n        allPositions: [solvedPositions],\n        movesCount: 0,\n        time: 0,\n        history: []\n      }\n    }\n    case \"WIN\": {\n      clearCache()\n      return {\n        ...state,\n        currPositions: solvedPositions,\n        win: true,\n        forbidMove: -1,\n        nextMove: null,\n        allMoves: [0],\n        allPositions: [solvedPositions]\n      }\n    }\n    case \"DISABLE\": {\n      return {\n        ...state, disabled: action.payload.disable\n      }\n    }\n    case \"SET_LEVEL\": {\n      localStorage.setItem(\"level\", action.payload.level)\n      return {\n        ...state, level: action.payload.level\n      }\n    }\n    case \"SAVE_TIME\": {\n      let currTime = action.payload.time\n      let h_index = currTime.indexOf(\"h\")\n      let m_index = currTime.indexOf(\"m\")\n      let s_index = currTime.indexOf(\"s\")\n      let hours = parseInt(currTime.slice(0, h_index + 1))\n      let minutes = parseInt(currTime.slice(h_index + 2, m_index + 1))\n      let seconds = parseInt(currTime.slice(m_index + 2, s_index + 1))\n      let totalTime = (hours * 3600 + minutes * 60 + seconds) * 1000\n      saveTime(totalTime)\n      return { ...state, time: totalTime };\n    }\n    default:\n      return state;\n  }\n}\n","import game from \"./game\"\nexport default {\n  game\n  };","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(\n  combineReducers(reducers),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;","const onGameAction = (action, params) => dispatch => {\n  let shuffleWithLevel = (level) => {\n    for (var i = 0; i < (level + 1) * 20; i++) {\n      dispatch({ type: \"SELECT_RANDOM\", payload: {} })\n      dispatch({ type: \"SHUFFLE_ONE_STEP\", payload: {} })\n    }\n  }\n\n  switch (action) {\n    case \"MOVE\":\n      dispatch({ type: \"MOVE_ONE_STEP\", payload: { tile: params.tile } })\n      break;\n    case \"SHUFFLE\":\n      dispatch({ type: \"DISABLE\", payload: { disable: true } })\n      shuffleWithLevel(params.level)\n      dispatch({ type: \"DISABLE\", payload: { disable: false } })\n      break;\n    case \"SOLVE\":\n      dispatch({ type: \"DISABLE\", payload: { disable: true } })\n      let solveArr = params.allMoves.slice().reverse();\n      let step = 0;\n      let solutionTimer = setInterval(() => {\n        dispatch({ type: \"SOLVE_ONE_STEP\", payload: { tile: solveArr[step] } })\n        step++;\n        if (step >= solveArr.length - 1) {\n          dispatch({ type: \"WIN\", payload: {} })\n          dispatch({ type: \"DISABLE\", payload: { disable: false } })\n          clearInterval(solutionTimer)\n        }\n      }, 200);\n      break;\n    case \"RESTART\":\n      dispatch({ type: \"RESET\", payload: {} })\n      shuffleWithLevel(params.level)\n      break;\n    case \"SET_LEVEL\":\n      dispatch({ type: \"SET_LEVEL\", payload: { level: params.level } })\n      break;\n    case \"SAVE_TIME\":\n      dispatch({ type: \"SAVE_TIME\", payload: { time: params.time } })\n      break;\n    default:\n      break;\n  }\n};\n\n\n\nexport default onGameAction;","import React, { useEffect } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport onGameAction from \"./actions/onGameAction\";\nimport Timer from 'react-compound-timer';\n\nlet gridPositions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\nconst grid = gridPositions.map(n => {\n  const row = Math.floor(n / 4);\n  const col = n % 4;\n  return [80 * col, 80 * row];\n});\n\nfunction Button({ handleClick, action, disabled }) {\n  return (\n    <button className={action} onClick={handleClick} disabled={disabled} >{action}</button>\n  )\n}\nfunction LevelItem({ handleClick, level, style, id }) {\n  return (\n    <button id={id} className={level} onClick={handleClick} style={style}>{level}</button>\n  )\n}\n\n\nfunction Game(props) {\n\n  let timerStart, timerResume, timerPause, timerStop, timerReset\n\n  const { currPositions, disabled, movesCount, level, allMoves, time, win, history } = props;\n  const moveTile = (tile) => {\n    if (!disabled) {\n      props.onGameAction(\"MOVE\", { tile: tile });\n    }\n  }\n  const shufflePuzzle = () => {\n    props.onGameAction(\"SHUFFLE\", { level: level })\n  }\n  const solvePuzzle = () => {\n    timerStop();\n    props.onGameAction(\"SAVE_TIME\", { time: document.getElementById(\"timer-value\").innerHTML });\n    props.onGameAction(\"SOLVE\", { allMoves: allMoves })\n    timerReset();\n  }\n  const restartPuzzle = () => {\n    timerReset();\n    props.onGameAction(\"RESTART\", { level: level })\n    timerStart();\n  }\n\n  const changeLevel = (e) => {\n    props.onGameAction(\"SET_LEVEL\", { level: parseInt(e.target.id) })\n  }\n\n  useEffect(() => {\n    props.onGameAction(\"SAVE_TIME\", { time: document.getElementById(\"timer-value\").innerHTML });\n  }, [movesCount])\n\n  useEffect(() => {\n    if (win) {\n      timerStop();\n      setTimeout(() => document.getElementById(\"stop\").click(), 100)\n    }\n  }, [win])\n\n\n  return (\n    <div>\n      <h1 className=\"heading\">15 Puzzle Game</h1>\n      <div id=\"main\" className=\"container\">\n        <div className=\"info\">\n          <h1>Info</h1>\n          <div id=\"timer\" key={time}>\n            <b>{\"Time: \"}</b>\n            <Timer\n              initialTime={time}\n              lastUnit=\"h\"\n            >\n              {({ start, resume, pause, stop, reset }) => {\n                timerStart = start;\n                timerResume = resume;\n                timerPause = pause;\n                timerStop = stop;\n                timerReset = reset;\n                return (\n                  <React.Fragment>\n                    <span id=\"timer-value\">\n                      <Timer.Hours />{\"h \"}\n                      <Timer.Minutes />{\"m \"}\n                      <Timer.Seconds />{\"s\"}\n                    </span>\n                    <button id=\"stop\" onClick={stop} style={{ display: \"none\" }} />\n                    <button id=\"start\" onClick={start} style={{ display: \"none\" }} />\n                    <button id=\"resume\" onClick={resume} style={{ display: \"none\" }} />\n                    <button id=\"reset\" onClick={resume} style={{ display: \"none\" }} />\n                  </React.Fragment>\n                )\n              }}\n\n            </Timer>\n          </div>\n          <div id=\"counts\">\n            <b>Moves:</b> {props.movesCount}\n          </div>\n          <div id=\"win\">\n            {win ? <p>Solved!</p> : \"\"}\n          </div>\n        </div>\n        < div className=\"game-container\">\n          <div className=\"game\">\n            {currPositions.map((i, key) => {\n              let cellClass = key ? \"cell\" : 'empty cell';\n              let [x, y] = grid[currPositions.indexOf(key)];\n              return <div key={key}\n                className={cellClass}\n                onClick={() => moveTile(key)}\n                style={{ transform: `translate(${x}px,${y}px)` }}>{key}</div>\n            })}\n          </div>\n        </ div>\n        <div className=\"info\">\n          <h1>History</h1>\n          {history.map((line, key) => {\n            return (\n              <div key={key}>\n                {line}\n              </div>\n            )\n          })}\n        </div>\n      </div >\n      <div className=\"container\">\n        <div className=\"controls\">\n          <Button action={\"shuffle\"} handleClick={shufflePuzzle} disabled={disabled} />\n          <Button action={\"solve\"} handleClick={solvePuzzle} disabled={disabled} />\n          <Button action={\"restart\"} handleClick={restartPuzzle} disabled={disabled} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"levels\">\n          {[\"amateur\", \"semi-pro\", \"professional\", \"legendary\"].map((level, key) => {\n            return <LevelItem level={level} id={key} key={key} handleClick={changeLevel} style={{ borderColor: props.level === key ? \"#333\" : \"transparent\" }} />\n          })}\n        </div>\n      </div>\n    </div>)\n}\n\n\nconst mapStateToProps = state => ({\n  currPositions: state.game.currPositions,\n  allMoves: state.game.allMoves,\n  disabled: state.game.disabled,\n  movesCount: state.game.movesCount,\n  level: state.game.level,\n  time: state.game.time,\n  win: state.game.win,\n  history: state.game.history\n});\n\nconst actions = { onGameAction };\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Game);\n\n","import React from 'react';\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport store from './store';\nimport Game from './Game';\n\n\nconst App = () => (\n  <Provider store={store}>\n      <div>\n        <Game />\n      </div>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}